---
import HeaderLink from './HeaderLink.astro';
import { Name } from '../consts';
---

<header id="main-header">
  <div class="nav-container">
    <nav>
      <h2><a class="title" href="/">{Name}</a></h2>
      <div class="internal-links">
        <HeaderLink href="/">Home</HeaderLink>
        <HeaderLink href="/projects">Projects</HeaderLink>
        <HeaderLink href="/about">About</HeaderLink>
      </div>
      <div class="right-menu">
        <button id="themeToggle" aria-label="Toggle Theme">
          <svg
            width="30px"
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 24 24"
          >
            <path
              class="sun"
              fill-rule="evenodd"
              d="M12 17.5a5.5 5.5 0 1 0 0-11 5.5 5.5 0 0 0 0 11zm0 1.5a7 7 0 1 0 0-14 7 7 0 0 0 0 14zm12-7a.8.8 0 0 1-.8.8h-2.4a.8.8 0 0 1 0-1.6h2.4a.8.8 0 0 1 .8.8zM4 12a.8.8 0 0 1-.8.8H.8a.8.8 0 0 1 0-1.6h2.5a.8.8 0 0 1 .8.8zm16.5-8.5a.8.8 0 0 1 0 1l-1.8 1.8a.8.8 0 0 1-1-1l1.7-1.8a.8.8 0 0 1 1 0zM6.3 17.7a.8.8 0 0 1 0 1l-1.7 1.8a.8.8 0 1 1-1-1l1.7-1.8a.8.8 0 0 1 1 0zM12 0a.8.8 0 0 1 .8.8v2.5a.8.8 0 0 1-1.6 0V.8A.8.8 0 0 1 12 0zm0 20a.8.8 0 0 1 .8.8v2.4a.8.8 0 0 1-1.6 0v-2.4a.8.8 0 0 1 .8-.8zM3.5 3.5a.8.8 0 0 1 1 0l1.8 1.8a.8.8 0 1 1-1 1L3.5 4.6a.8.8 0 0 1 0-1zm14.2 14.2a.8.8 0 0 1 1 0l1.8 1.7a.8.8 0 0 1-1 1l-1.8-1.7a.8.8 0 0 1 0-1z"
            ></path>
            <path
              class="moon"
              fill-rule="evenodd"
              d="M16.5 6A10.5 10.5 0 0 1 4.7 16.4 8.5 8.5 0 1 0 16.4 4.7l.1 1.3zm-1.7-2a9 9 0 0 1 .2 2 9 9 0 0 1-11 8.8 9.4 9.4 0 0 1-.8-.3c-.4 0-.8.3-.7.7a10 10 0 0 0 .3.8 10 10 0 0 0 9.2 6 10 10 0 0 0 4-19.2 9.7 9.7 0 0 0-.9-.3c-.3-.1-.7.3-.6.7a9 9 0 0 1 .3.8z"
            ></path>
          </svg>
        </button>
        <!-- Burger menu for mobile -->
        <button
          class="burger-menu"
          id="burgerMenu"
          aria-label="Open Navigation"
        >
          <svg
            width="35px"
            height="35px"
            fill-rule="evenodd"
            fill="currentColor"
            viewBox="0 0 24 24"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path d="M5 6.5H19V8H5V6.5Z" fill-rule="evenodd"></path>
            <path d="M5 16.5H19V18H5V16.5Z" fill-rule="evenodd"></path>
            <path d="M5 11.5H19V13H5V11.5Z" fill-rule="evenodd"></path>
          </svg>
        </button>
      </div>
    </nav>
  </div>

  <!-- Mobile Navigation Menu -->
  <div id="mobileMenu" class="mobile-menu">
    <HeaderLink href="/">Home</HeaderLink>
    <HeaderLink href="/projects">Projects</HeaderLink>
    <HeaderLink href="/about">About</HeaderLink>
  </div>
</header>

<style>
  /* Initial styles for the header */

  .title {
    margin: 0 0 0 20px;
    font-family: 'Syncopate', serif;
    font-weight: 600;
    font-style: normal;
  }

  #main-header {
    position: sticky;
    top: 0;
    z-index: 1000;
    box-shadow: none;
    background-color: var(--bg-color);
    display: flex;
    align-items: center;
    width: 100%;
  }

  .nav-container {
    display: flex;
    align-items: center;
    justify-content: space-between;
    width: 100%;
    z-index: 1000;
    transition: all 0.3s ease;
  }

  nav {
    display: flex;
    align-items: center;
    justify-content: space-between;
    width: 100%;
    z-index: 1000;
    padding: 10px 5px;
  }

  h2 a {
    color: var(--text-color);
    font-weight: bold;
    text-decoration: none;
  }

  .internal-links {
    display: flex;
    z-index: 1000;
    gap: 1rem;
  }

  .right-menu button {
    background: none;
    z-index: 1000;
    border: none;
    cursor: pointer;
  }

  .burger-menu {
    color: var(--text-color);
    display: none;
    z-index: 1000;
  }

  /* Island effect when scrolled */
  .nav-container.scrolled {
    box-shadow: var(--nav-shadow);
    z-index: 1000;
  }

  /* Sun/Moon icon styles */
  .sun {
    fill: var(--text-color);
  }
  .moon {
    fill: transparent;
  }

  :global(.light) .sun {
    fill: transparent;
  }
  :global(.light) .moon {
    fill: var(--text-color);
  }

  .mobile-menu {
    display: none;
    position: absolute;
    top: 60px;
    right: 0;
    width: 100%;
    z-index: 1000;
    padding: 1rem;
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.3);
  }

  /* Media queries for mobile responsiveness */
  @media (max-width: 768px) {
    .burger-menu {
      display: block;
      z-index: 1000;
    }

    .right-menu {
      display: flex;
      justify-content: center;
      align-items: center;
      z-index: 1000;
      color: var(--text-color);
    }

    .internal-links {
      display: none;
      z-index: 1000;
    }

    .mobile-menu {
      display: none;
      background-color: var(--bg-muted);
      position: absolute;
      top: 60px;
      right: 0;
      width: 100%;
      z-index: 1000;
      padding: 1rem;
      box-shadow: 0 4px 10px rgba(0, 0, 0, 0.3);
    }

    #mobileMenu.open {
      display: flex;
      justify-content: space-around;
      align-items: center;
      z-index: 1000;
    }

    .nav-container.scrolled {
      width: 100vw;
      z-index: 1000;
      margin: 0;
      box-shadow: none;
    }
  }
</style>
<script is:inline>
  // Scroll event listener to add the "scrolled" class
  window.addEventListener('scroll', () => {
    const header = document.querySelector('.nav-container');
    if (window.scrollY > 50) {
      header.classList.add('scrolled');
    } else {
      header.classList.remove('scrolled');
    }
  });

  // Theme toggle functionality
  const themeToggleButton = document.getElementById('themeToggle');
  const sunIcon = document.querySelector('.sun');
  const moonIcon = document.querySelector('.moon');

  const getUserTheme = () => {
    if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
      return localStorage.getItem('theme');
    }
    return 'dark'; // Default to dark theme
  };

  const applyTheme = (theme) => {
    document.documentElement.classList.toggle('dark', theme === 'dark');
    document.documentElement.classList.toggle('light', theme === 'light');
    // Update icons visibility based on the theme
    sunIcon.style.display = theme === 'dark' ? 'block' : 'none';
    moonIcon.style.display = theme === 'dark' ? 'none' : 'block';
  };

  let theme = getUserTheme();
  applyTheme(theme);

  themeToggleButton.addEventListener('click', () => {
    theme = theme === 'dark' ? 'light' : 'dark';
    applyTheme(theme);
    localStorage.setItem('theme', theme);
  });

  // Burger menu toggle functionality
  const burgerMenuButton = document.getElementById('burgerMenu');
  const mobileMenu = document.getElementById('mobileMenu');

  burgerMenuButton.addEventListener('click', () => {
    mobileMenu.classList.toggle('open');
  });
</script>
